#  Kogut-Susskind fermion eigenvalue/eigenvector computation
#  with improved actions
#  MIMD version 7
#
#  Generic make-include file for ks_eigen codes
#  This template file defines rules and macros common to all architectures
#  It is intended to be an include file for other Makefiles.
#  Don't use it by itself!
#
#	su3_eigen_asqtad -- eigenvalues for asqtad improved fermions
#	su3_eigen_hisq   -- eigenvalues for hisq improved fermions
#	su3_eigen_p4fat3 -- eigenvalues for p4fat3 improved fermions
#

MYINCLUDEDIR = .
INCLUDEDIR = ../include
#Where the complex and su3 libraries are
LIBDIR = ../libraries

GLOBAL_HEADERS = ${INCLUDEDIR} ../libraries/include

INLINE_HEADERS = \
  ../sse/include/ \
  ../sse2/include/ \
  ../libraries/include/

MY_HEADERS = \
  lattice.h \
  params.h \
  defines.h \
  ks_eig_includes.h \
  quark_action.h

HEADERS = ${GLOBAL_HEADERS} ${MY_HEADERS} ${INLINE_HEADERS} \
  ${QUDA_HEADERS} ${QPHIX_HEADERS} ${GRID_HEADERS} ${SCIDAC_HEADERS}

# All required object files
# Basic set from current directory
MY_OBJECTS = \
  control.o \
  gauge_info.o \
  setup.o

G_U1_OBJECTS =       \
  io_u1lat.o         \
  u1link.o           \
  u1plaq.o

# Selection of layout

LAYOUT = layout_hyper_prime.o # Choices possible here

ADD_OBJECTS = ${MACHINE_DEP_IO} ${COMMPKG} jacobi.o spin_taste_ops.o gammas.o

ADD_OBJECTS += eigen_stuff_ARPACK.o eigen_stuff_PRIMME.o eigen_stuff_Ritz.o eigen_stuff_Grid.o
ifeq ($(strip ${HAVE_GRID}),true)
	ADD_OBJECTS += gridStaggEigen.o
endif

ADD_OBJECTS += eigen_stuff_helpers.o io_helpers_ks_eigen.o io_ks_eigen.o io_scidac_ks_eigen.o

# Always use PRIMME if it is provided
ifeq ($(strip ${HAVEPRIMME}),true)
  ADDDEFINES += -DPRIMME
# Always use ARPACK if it is provided
else ifeq ($(strip ${HAVEARPACK}),true)
  ADDDEFINES += -DARPACK
else ifeq ($(strip ${HAVE_GRID}),true)
  ADDDEFINES += -DGrid_EIG
else
  ADDDEFINES += -DKalkreuter_Ritz
endif

OBJECTS = \
  ${MY_OBJECTS} \
  ${FFT_OBJECTS} \
  ${GAUGE_OBJECTS} \
  ${LAYOUT} \
  ${STANDARD_OBJECTS} \
  ${ADD_OBJECTS} \
  ${EXTRA_OBJECTS}

#Libraries for complex numbers and su3 functions
P = $(strip ${PRECISION})
QCDLIB = ${LIBDIR}/su3.${P}.a ${LIBDIR}/complex.${P}.a 

LIBRARIES = ${QCDLIB} ${SCIDAC_LIBRARIES} ${QUDA_LIBRARIES}

# Default rule for C compilation
.c.o: ; ${CC} -c ${CFLAGS} $<
.cc.o: ; ${CXX} -c ${CXXFLAGS} $<

# To force a full remake when changing targets
LASTMAKE = .lastmake.${MAKEFILE}.${P}.${MYTARGET}

${LASTMAKE}: ${ALL_MAKES}
	-/bin/rm -f .lastmake.* quark_action.h
	${MAKE} -f ${MAKEFILE} clean
	touch ${LASTMAKE}

# All make files used in this compilation
ALL_MAKES = \
  Make_template \
  ${MAKEFILE} \
  ../Make_template_combos \
  ../Make_template_scidac \
  ../generic/Make_template \
  ../generic_ks/Make_template \
  ../generic_u1/Make_template   

# To force a remake when changing any make file, header, or target
${OBJECTS} : ${LASTMAKE} ${HEADERS} ${ALL_MAKES}

# Directories where we store the improved action headers
QUARKIMP = ../generic_ks/imp_actions

quark_action.h: ${QUARKIMP}/${QUARK}
	@echo Copying quark_action.h from ${QUARKIMP}/${QUARK}
	/bin/cp ${QUARKIMP}/${QUARK} quark_action.h

##### Targets:

# Optional DEFINES for targets

# -DFN          identifies fat-Naik-like actions with only next and 3rd
#               next neighbor linkage

su3_eigen_asqtad::
	${MAKE} -f ${MAKEFILE} target "MYTARGET = $@" \
	"DEFINES = -DFN -DEIGEN_QIO" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS = ${FN_OBJECTS}"

su3_eigen_hisq::
	${MAKE} -f ${MAKEFILE} target "MYTARGET = $@" \
	"DEFINES = -DFN -DEIGEN_QIO" \
	"QUARK = hisq/hisq_u3_action.h" \
	"EXTRA_OBJECTS = ${HISQ_OBJECTS}"

su3_eigen_hisq_pack::
	${MAKE} -f ${MAKEFILE} target "MYTARGET = $@" \
	"DEFINES = -DFN -DEIGEN_QIO -DPACK_EIGEN" \
	"QUARK = hisq/hisq_u3_action.h" \
	"EXTRA_OBJECTS = ${HISQ_OBJECTS}"

# HISQ + U(1) targets WARNING: Naive implementation

su3_u1_eigen_hisq::
	${MAKE} -f ${MAKEFILE} target "MYTARGET = $@" \
	"DEFINES = -DFN -DEIGEN_QIO -DU1_FIELD" \
	"QUARK = hisq/hisq_u3_action.h" \
	"EXTRA_OBJECTS = ${HISQ_OBJECTS} ${G_U1_OBJECTS}"

# No QOP support for p4, so we use pure MILC routines only and
# undefine the macros HAVE_QOP and HAVE_QDP
# Currently not supported.  Needs fixing.

su3_eigen_p4fat3::
	${MAKE} -f ${MAKEFILE} target "MYTARGET = $@" \
	"DEFINES = -DEO \
	-UKS_MULTICG -UHAVE_QOP -UHAVE_QDP" \
	"QUARK = p4fat3_action.h" \
	"EXTRA_OBJECTS = ${EO_OBJECTS}"

clean:
	-/bin/rm -f *.o quark_action.h

# Rules for generic routines
include ../generic/Make_template

# Rules for generic_ks routines
include ../generic_ks/Make_template

# Rules for generic_wilson routines
include ../generic_wilson/Make_template

libmake:
	@echo Building libraries with ${MAKELIBRARIES}
	cd ${LIBDIR} ;\
	${MAKE} -f ${MAKELIBRARIES} "APP_CC=${CC}" "PRECISION=${PRECISION}" \
        "ARCH=${ARCH}" "COMPILER=${COMPILER}" all

localmake: ${OBJECTS} ${LIBRARIES}
	${LD} -o ${MYTARGET} ${LDFLAGS} \
	${OBJECTS} ${QCDLIB} ${ILIB} -lm
	touch localmake

target: libmake localmake 
