#  Staggered measurements
#  MIMD version 7

#  Generic make-include file for ks_measure code

#  This template file defines rules and macros common to all architectures
#  It is intended to be an include file for other Makefiles.
#  Don't use it by itself!
#
#  Targets
#
#	ks_measure_asqtad         Basic measurements (asqtad)
#	ks_measure_hisq		  Basic measurements (HISQ)
#	ks_measure_asqtad_eos     " plus DM_DU0 (asqtad)
#	ks_measure_asqtad_susc    " plus quark number susceptibilities (asqtad)
#	ks_measure_asqtad_mu_eos  " plus nonzero chemical potential


MYINCLUDEDIR = .
INCLUDEDIR = ../include
#Where the complex and su3 libraries are
LIBDIR = ../libraries

GLOBAL_HEADERS = ${INCLUDEDIR} ../libraries/include

INLINE_HEADERS = \
  ../sse/include/ \
  ../sse2/include/ \
  ../libraries/include/

MY_HEADERS = \
  lattice.h \
  params.h \
  defines.h \
  ks_measure_includes.h \
  quark_action.h

HEADERS = ${GLOBAL_HEADERS} ${MY_HEADERS} ${INLINE_HEADERS} \
  ${QUDA_HEADERS} ${QPHIX_HEADERS} ${GRID_HEADERS} ${SCIDAC_HEADERS}

# All required object files
# Basic set from current directory
MY_OBJECTS =         \
  control.o          \
  gauge_info.o       \
  setup.o           

G_U1_OBJECTS =       \
  io_u1lat.o         \
  u1link.o           \
  u1plaq.o

# Selection of layout

LAYOUT = layout_hyper_prime.o # Choices possible here

ADD_OBJECTS = ${MACHINE_DEP_IO} ${COMMPKG}

# Generic QOP objects
ifeq ($(strip ${HAVEQOP}),true)
  ADD_OBJECTS += ${GENERICQOP}
endif

DEFLATE_OBJECTS = \
 eigen_stuff_helpers.o \
 gammas.o \
 io_helpers_ks_eigen.o \
 io_ks_eigen.o \
 io_scidac_ks_eigen.o \
 jacobi.o \
 spin_taste_ops.o

OBJECTS = \
  ${MY_OBJECTS} \
  ${GAUGE_OBJECTS} \
  ${LAYOUT} \
  ${FFT_OBJECTS} \
  ${STANDARD_OBJECTS} \
  ${DEFLATE_OBJECTS} \
  ${ADD_OBJECTS} \
  ${EXTRA_OBJECTS}

EIGCG_OBJECTS = \
 inc_eigcg.o

# Selection of eigensolver program
ifeq ($(strip ${HAVEQOP}),true)
# Interface to access QOP (not supported, so same as below)
  ifeq ($(strip ${HAVEPRIMME}),true)
     DEFLATE_OBJECTS += eigen_stuff_PRIMME.o
     ADDDEFINES += -DPRIMME
  else ifeq ($(strip ${HAVEARPACK}),true)
     DEFLATE_OBJECTS += eigen_stuff_ARPACK.o
     ADDDEFINES += -DARPACK
  else
     DEFLATE_OBJECTS += eigen_stuff_Ritz.o
     ADDDEFINES += -DKalkreuter_Ritz
  endif
else
  ifeq ($(strip ${HAVEQDP}),true)
    DEFLATE_OBJECTS += eigen_stuff_qdp.o
  else
    ifeq ($(strip ${HAVEPRIMME}),true)
       DEFLATE_OBJECTS += eigen_stuff_PRIMME.o
       ADDDEFINES += -DPRIMME
    else ifeq ($(strip ${HAVEARPACK}),true)
       DEFLATE_OBJECTS += eigen_stuff_ARPACK.o
       ADDDEFINES += -DARPACK
    else
       DEFLATE_OBJECTS += eigen_stuff_Ritz.o
       ADDDEFINES += -DKalkreuter_Ritz
    endif
  endif
endif

# Libraries for complex numbers and su3 functions
P = $(strip ${PRECISION})
QCDLIB = ${LIBDIR}/su3.${P}.a ${LIBDIR}/complex.${P}.a 

LIBRARIES = ${QCDLIB} ${SCIDAC_LIBRARIES} ${QUDA_LIBRARIES}

# Default rule for C compilation
.c.o: ; ${CC} -c ${CFLAGS} $<

# To force a full remake when changing targets
LASTMAKE = .lastmake.${MAKEFILE}.${P}.${MYTARGET}

${LASTMAKE}: ${ALL_MAKES}
	-/bin/rm -f .lastmake.* quark_action.h
	${MAKE} -f ${MAKEFILE} clean
	touch ${LASTMAKE}

# All make files used in this compilation
ALL_MAKES = \
  Make_template \
  ${MAKEFILE} \
  ../Make_template_qop \
  ../Make_template_scidac \
  ../generic/Make_template \
  ../generic_ks/Make_template \
  ../generic_u1/Make_template \
  ../generic_wilson/Make_template

# To force a remake when changing any make file, header, or target

${OBJECTS} : ${LASTMAKE} ${HEADERS} ${ALL_MAKES}

# Directories where we store the improved action headers
QUARKIMP = ../generic_ks/imp_actions
GAUGEIMP = ../generic/imp_actions

quark_action.h: ${QUARKIMP}/${QUARK}
	@echo Copying quark_action.h from ${QUARKIMP}/${QUARK}
	/bin/cp ${QUARKIMP}/${QUARK} quark_action.h

##### Targets:

# Common compiler macros

# Optional DEFINES for timing:

# -DFN          identifies fat-Naik-like actions with only next and 3rd
#               next neighbor linkage

# -DDM_DU0      (for EOS) calculate quantities involving the deriv of
#               action wrto u0

# -DDM_DEPS     (for EOS) calculate quantities involving the deriv of
#               HISQ action wrto eps

# -DCHEM_POT    compute quantities needed for quark number susceptibility

# -DD_CHEM_POT  compute quantities needed for nonzero chemical potential

# -DCURRENT_DISC computes terms for measuring the disconnected current-current correlator

# Asqtad targets
ks_measure_asqtad::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"QUARK = asqtad_action.h" \
	"DEFINES = ${DEFINES} -DFN -DTR_MM_INV" \
	"EXTRA_OBJECTS= ${FN_OBJECTS}"

ks_measure_asqtad_eos::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"QUARK = asqtad_action.h" \
	"DEFINES = ${DEFINES}  -DFN -DDM_DU0 \
	-DTR_MM_INV -DCHEM_POT" "EXTRA_OBJECTS= ${FN_OBJECTS}"

ks_measure_asqtad_susc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"QUARK = asqtad_action.h" \
	"DEFINES = ${DEFINES}  -DFN -DCHEM_POT \
	-DTR_MM_INV" \
	"EXTRA_OBJECTS= ${FN_OBJECTS}"

ks_measure_asqtad_mu_eos::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"QUARK = asqtad_action.h" \
	"DEFINES = ${DEFINES}  -DFN -DDM_DU0 \
	-DTR_MM_INV -DCHEM_POT -DD_CHEM_POT" \
	"EXTRA_OBJECTS= ${FN_OBJECTS} mu_fast.o"

# HISQ targets

# Other HISQ optsions
#       -DHISQ_REUNIT_SVD_ONLY \

HISQ_OPTIONS = "DEFINES = -DFN -DHAVE_KS \
	-DHISQ_REUNIT_ALLOW_SVD \
	-DHISQ_REUNIT_SVD_REL_ERROR=1e-8 \
	-DHISQ_REUNIT_SVD_ABS_ERROR=1e-8" \
	"QUARK = hisq/hisq_u3_action.h" \
	"EXTRA_OBJECTS= ${HISQ_OBJECTS}"

ks_measure_hisq::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	${HISQ_OPTIONS}

ks_measure_eigcg_hisq::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	${HISQ_OPTIONS} "DEFINES += -DEIGMODE=EIGCG" \
	"EXTRA_OBJECTS += ${EIGCG_OBJECTS}"

ks_measure_current_hisq::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	${HISQ_OPTIONS} "DEFINES += -DCURRENT_DISC" \
	"EXTRA_OBJECTS += f_meas_current.o"

ks_measure_current_eigcg_hisq::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	${HISQ_OPTIONS} "DEFINES += -DCURRENT_DISC \
	-DEIGMODE=EIGCG" \
	"EXTRA_OBJECTS += f_meas_current.o ${EIGCG_OBJECTS}"

ks_measure_hisq_eos::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	${HISQ_OPTIONS}	"DEFINES += -DDM_DEPS -DCHEM_POT"

ks_measure_hisq_susc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	${HISQ_OPTIONS} "DEFINES += -DCHEM_POT"

ks_measure_hisq_mu_eos::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	${HISQ_OPTIONS} "DEFINES += -DDM_DEPS -DCHEM_POT \
	-DD_CHEM_POT" "EXTRA_OBJECTS += mu_fast.o"

# HISQ + U(1)

ks_measure_current_hisq_u1::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	${HISQ_OPTIONS} "DEFINES += -DCURRENT_DISC -DU1_FIELD" \
	"EXTRA_OBJECTS += f_meas_current.o ${G_U1_OBJECTS}"

ks_measure_current_hisq_u1_loop::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	${HISQ_OPTIONS} "DEFINES += -DCURRENT_DISC -DU1_FIELD" \
	"DEFINES += -DQED_LOOP" \
	"EXTRA_OBJECTS += f_meas_current.o ${G_U1_OBJECTS}"

clean:
	-/bin/rm -f *.o quark_action.h

# Rules for generic routines
include ../generic/Make_template

# Rules for generic_ks routines
include ../generic_ks/Make_template

# Rules for generic_u1 routines
include ../generic_u1/Make_template

# Rules for generic_wilson routines
include ../generic_wilson/Make_template

libmake:
	@echo Building libraries with ${MAKELIBRARIES}
	cd ${LIBDIR} ;\
	${MAKE} -f ${MAKELIBRARIES} "APP_CC=${CC}" "PRECISION=${PRECISION}" \
        "ARCH=${ARCH}" "COMPILER=${COMPILER}" all

localmake: ${OBJECTS} ${LIBRARIES}
	${LD} -o ${MYTARGET} ${LDFLAGS} \
	${OBJECTS} ${QCDLIB} ${ILIB} -lm
	touch localmake

target: libmake localmake 
